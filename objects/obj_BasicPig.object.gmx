<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_BasicPig</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init Enemy Values

dir = -1;
xSpeed = 0;
ySpeed = 0;
moveSpeed = 8;
grav = 0.4;
hp = 3;
pixelTolerance = 4;
fearOfHeights = true;
tolerance = 5;
timeToCharge = 20;
chargeRange = 100;
chargeTime = 25;
rechargeTime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Patrol Code

xSpeed = dir * moveSpeed;
ySpeed += grav;

//charge behavior

if(distance_to_object(obj_Player) &lt; chargeRange &amp;&amp; timeToCharge &gt;= 0 &amp;&amp; rechargeTime &lt;= 0){
    if(timeToCharge== 20){ 
        ySpeed += -2.5;
    }
    xSpeed = 0;
    timeToCharge -= 1;    
}

if(distance_to_object(obj_Player) &lt; chargeRange &amp;&amp; timeToCharge &lt;= 0 &amp;&amp; rechargeTime &lt;= 0){
    if(chargeTime == 10){dir = sign(obj_Player.x - x)}
    
    xSpeed = moveSpeed * 2 * dir;
    chargeTime -= 1;
    if(chargeTime &lt;= 0 || place_meeting(x, y, obj_Player)){
        timeToCharge = 20;
        chargeTime = 10;
        rechargeTime = 150;
    }
}


//collision code

if(place_meeting(x+xSpeed,y - pixelTolerance, obj_Platform))
{
    while(!place_meeting(x + sign(xSpeed), y, obj_Platform))
    {
        x += sign(xSpeed);
    }
    xSpeed = 0;
    
    dir *= -1;
}

x += xSpeed;

if(place_meeting(x, y + ySpeed, obj_Platform))
{
    while(!place_meeting(x, y + sign(ySpeed), obj_Platform))
    {
        y += sign(ySpeed);
    }
    ySpeed = 0;
    if((fearOfHeights) &amp;&amp; !position_meeting(((x + x/2)), (y + y/2 + tolerance), obj_Platform)){
        show_debug_message("fearOfHeights called");
        dir *= -1;
    }
}

y += ySpeed;

//rechargeTime for charge attack

rechargeTime--;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Bullet Collision

if(place_meeting(x, y, obj_Bullet))
{
    var inst = instance_place(x, y, obj_Bullet);
    if(instance_exists(inst))
    {
        hp -= inst.damage;
        with(inst)
        {
              instance_destroy();
        }
    }
}

if(place_meeting(x, y, obj_LargeBullet))
{
    var inst = instance_place(x, y, obj_LargeBullet);
    if(instance_exists(inst))
    {
        hp -= inst.damage;
        with(inst)
        {
              instance_destroy();
        }
    }
}
if(hp &lt;= 0)
{
    var inst = instance_position(x, y, obj_BasicPig);  
    with(inst)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animation

if(xSpeed != 0){
    sprite_index = spr_BasicPigWalk;
    image_speed = 1/4;
}
else if(xSpeed &gt; moveSpeed){
    image_speed = 1/2;
}

else {
    sprite_index = spr_BasicPig;
}

image_xscale = -dir;


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
